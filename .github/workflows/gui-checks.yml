name: GUIChecks
on:
  pull_request:
    paths:
      - 'tasks/*'
      - 'workflows/*'
  push:
    branches:
      - 'master'

jobs:
  walnut-check:
    name: Check Task and Workflow Templates through Walnut
    runs-on: macOS-latest
    env:
      RESULT_TASKS: ''
      RESULT_WORKFLOWS: ''
      LIST_OF_VARIABLES: dcs_enabled\|trg_enabled\|epn_enabled\|odc_topology\|odc_enabled\|qcdd_enabled\|dd_enabled\|ddsched_enabled\|minimal_dpl_enabled\|readout_cfg_uri\|qc_config_uri
    steps:
      - uses: actions/checkout@v2
        with:
            path: ControlWorkflows
      - run: (echo "Checks will be ran against branch  ${{ github.ref }}")
      - name: Run GUI variables checks for TASKS
        working-directory: ./ControlWorkflows
        run: |
          RESULT_TASKS=$(grep $LIST_OF_VARIABLES ./tasks/*.yaml)
      - name: Run GUI variables checks for WORKFLOWS
        working-directory: ./ControlWorkflows
        run: |
          RESULT_WORKFLOWS=$(grep $LIST_OF_VARIABLES ./workflows/*.yaml)
      - name: Check results of grep commands
        run: |
          IS_GUI_OK=true
          if [ -z "$RESULT_TASKS" ];
          then
            echo "TASKS folder did not find any breaking changes"
          else 
            IS_GUI_OK=false
            echo "TASKS folder found breaking changes. Please inform GUI Developer"
          fi
          if [ -z "$RESULT_WORKFLOWS" ];
          then
            echo "WORKFLOWS folder did not find any breaking changes"
          else 
            IS_GUI_OK=false
            echo "WORKFLOWS folder found breaking changes. Please inform GUI Developer"
          fi
          if [ "$IS_GUI_OK" = false ] ; then
            exit 1;
          fi
