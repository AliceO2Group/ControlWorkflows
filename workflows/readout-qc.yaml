name: readout-qc
defaults:
  monitoring_qc_url: "no-op://"
  monitoring_dd_url: "no-op://"
  monitoring_readout_url: "no-op://"
  log_task_output: none
  fmq_rate_logging: 0
roles:
  - name: readout-{{ it }}
    for:
      range: "{{ hosts }}"
      var: it
    constraints:
      - attribute: machine_id
        value: "{{ it }}"
    vars:
      readout_cfg_uri: "consul-ini://{{ consul_endpoint }}/o2/components/readout/ANY/any/readout-standalone-{{ it }}"
    roles:
      - name: "readout"
        task:
          load: readout
  - name: qc-single-subwf
    defaults:
      qchost: "{{ FromJson(hosts)[0] }}"
      dpl_config: "/etc/flp.d/qc/readout-qc.dpl.json"
    vars:
      qc_config_uri: consul-json://{{ consul_endpoint }}/o2/components/qc/ANY/any/readout_to_daqtask-{{ qchost }}
    constraints:
      - attribute: machine_id
        value: "{{ qchost }}"
    roles:
      - name: "readout-proxy"
        connect:
          - name: "from_internal-dpl-clock_to_readout-proxy"
            target: "{{Parent().Path}}.internal-dpl-clock:from_internal-dpl-clock_to_readout-proxy"
            type: "pull"
            rateLogging: "{{ fmq_rate_logging }}"
          - name: "readout-proxy"
            target: "ipc:///tmp/readout-pipe-1"
            # readout-standalone.cfg [consumer-data-sampling] is hardcoded as channel "data-out" with type: pub and transport: zeromq
            # shmem is only possible in push-pull mode
            type: "sub"
            rateLogging: "{{ fmq_rate_logging }}"
        task:
          load: readout-proxy
      - name: "internal-dpl-clock"
        task:
          load: readout-internal-dpl-clock
      - name: "Dispatcher"
        connect:
          - name: "from_readout-proxy_to_Dispatcher"
            target: "{{Parent().Path}}.readout-proxy:from_readout-proxy_to_Dispatcher"
            type: "pull"
            rateLogging: "{{ fmq_rate_logging }}"
          - name: "from_internal-dpl-clock_to_Dispatcher"
            target: "{{Parent().Path}}.internal-dpl-clock:from_internal-dpl-clock_to_Dispatcher"
            type: "pull"
            rateLogging: "{{ fmq_rate_logging }}"
        task:
          load: readout-qc-dispatcher
      - name: "QC-TASK-RUNNER-daqTask"
        connect:
          - name: "from_internal-dpl-clock_to_QC-TASK-RUNNER-daqTask"
            target: "{{Parent().Path}}.internal-dpl-clock:from_internal-dpl-clock_to_QC-TASK-RUNNER-daqTask"
            type: "pull"
            rateLogging: "{{ fmq_rate_logging }}"
          - name: "from_Dispatcher_to_QC-TASK-RUNNER-daqTask"
            target: "{{Parent().Path}}.Dispatcher:from_Dispatcher_to_QC-TASK-RUNNER-daqTask"
            type: "pull"
            rateLogging: "{{ fmq_rate_logging }}"
        task:
          load: readout-qc-task-runner
      - name: "QC-CHECK-RUNNER-Q4H0"
        connect:
          - name: "from_QC-TASK-RUNNER-daqTask_to_QC-CHECK-RUNNER-Q4H0"
            target: "{{Parent().Path}}.QC-TASK-RUNNER-daqTask:from_QC-TASK-RUNNER-daqTask_to_QC-CHECK-RUNNER-Q4H0"
            type: "pull"
            rateLogging: "{{ fmq_rate_logging }}"
        task:
          load: readout-qc-check-runner
      - name: "internal-dpl-global-binary-file-sink"
        connect:
          - name: "from_QC-CHECK-RUNNER-Q4H0_to_internal-dpl-global-binary-file-sink"
            target: "{{Parent().Path}}.QC-CHECK-RUNNER-Q4H0:from_QC-CHECK-RUNNER-Q4H0_to_internal-dpl-global-binary-file-sink"
            type: "pull"
        task:
          load: readout-internal-dpl-global-binary-file-sink
