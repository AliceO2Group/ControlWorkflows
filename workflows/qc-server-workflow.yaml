name: !public qc-server-workflow
description: !public "A workflow template for running any standalone DPL workflows on QC servers"
defaults:
  ###############################
  # Basic Configuration Panel
  ###############################
  qc_remote_workflow: !public
    value: "none"
    type: string
    label: "QC node workflow"
    description: "Workflow to execute on QC servers"
    widget: dropDownBox
    panel: Basic_Configuration
    values:
      - none
      - emc-qc-post-calib-remote
      - tpc-qc-post-processing-remote
  qc_remote_machine: !public
    value: "select machine"
    type: string
    label: "QC node name"
    description: "QC server where the workflow should run"
    widget: dropDownBox
    panel: Basic_Configuration
    values:
      - "select machine"
      - alio2-cr1-qc01
      - alio2-cr1-qc02
      - alio2-cr1-qc03
      - alio2-cr1-qc04
      - alio2-cr1-qc05
      - alio2-cr1-qme01
      - alio2-cr1-qme02
      - alio2-cr1-qme03
      - alio2-cr1-qme04
      - alio2-cr1-qme05
      - alio2-cr1-qme06
      - alio2-cr1-qme07
      - alio2-cr1-qme08
      - alio2-cr1-qts01
  ###############################
  # Logging Panel
  ###############################
  infologger_severity: !public
    value: info
    type: string
    label: "DPL log level"
    description: "Minimum DPL logging severity which is sent to InfoLogger"
    widget: dropDownBox
    panel: Logging
    values:
      - "nolog"
      - "fatal"
      - "error"
      - "warn"
      - "state"
      - "info"
      - "debug"
      - "debug1"
      - "debug2"
      - "debug3"
      - "debug4"
      - "trace"
    index: 1
  log_task_stdout: !public
    value: none
    type: string
    label: "Task stdout"
    description: "Select to where the standard output of controlled tasks should be forwarded to (select 'all' for InfoLogger)"
    widget: dropDownBox
    panel: Logging
    values:
      - "none"
      - "stdout"
      - "all"
    index: 2
  log_task_stderr: !public
    value: none
    type: string
    label: "Task stderr"
    description: "Select to where the standard error of controlled tasks should be forwarded to (select 'all' for InfoLogger)"
    widget: dropDownBox
    panel: Logging
    values:
      - "none"
      - "stdout"
      - "all"
    index: 3
  fmq_rate_logging: !public
    value: "0"
    type: number
    label: "FairMQ rate logging"
    description: "sets the interval at which FairMQ logs channel transfer rates (0 to disable)"
    widget: editBox
    panel: Logging
    index: 4
  ###############################
  # Other variables
  ###############################
  drop_caches_enabled: "false"
  drop_caches_timeout: "30s"
  fmq_initial_shm_cleanup_enabled: "false"
  fmq_initial_shm_cleanup_timeout: "30s"
  fmq_cleanup_enabled: "false"
  monitoring_dpl_url: "no-op://"
  monitoring_qc_url: "no-op://"
  o2_install_path: "/opt/o2"
  o2_infologger_path: "/opt/o2-InfoLogger"
  user: qc
  extra_env_vars: ""
  detector: ""
  qc_remote_jit_enabled: "true"
  qc_dpl_command: "none"
roles:
  - name: qc-servers
    constraints:
      - attribute: machine_type
        value: qcserver
      - attribute: machine_id
        value: "{{ qc_remote_machine }}"
    defaults:
      qc_remote_workflow: none
      qc_shm_metadata_msg_size: 100000
    vars:
      user: qc
      session_id: "{{ environment_id }}" # we can't use "default" because other workflows might already exist on the same QC server
    roles:
      - name: qc-remote-workflow
        enabled: "{{ qc_remote_jit_enabled == 'false' && qc_remote_workflow != 'none' }}"
        include: "{{ qc_remote_workflow }}"
      - name: qc-remote-workflow
        enabled: "{{ qc_remote_jit_enabled == 'true' && qc_remote_workflow != 'none' && qc_dpl_command == 'none' }}"
        include: "{{ qc_remote_jit_enabled == 'true' ? dpl.GenerateFromUri(qc_remote_workflow) : '' }}"
      - name: qc-remote-workflow
        enabled: "{{ qc_remote_jit_enabled == 'true' && qc_dpl_command != 'none' }}"
        include: "{{ qc_remote_jit_enabled == 'true' ? dpl.Generate(qc_dpl_command) : '' }}"
      - name: drop-caches
        enabled: "{{drop_caches_enabled == 'true'}}"
        vars:
          shell_command: echo 3 > /proc/sys/vm/drop_caches && echo "system caches dropped" | O2_SYSTEM=ECS O2_PARTITION={{environment_id}} O2_ROLE={{qc_remote_machine}} {{o2_infologger_path}}/bin/o2-infologger-log -x -s Info -o Facility=core/dropcaches
          user: root
        task:
          load: "shell-command"
          trigger: before_CONFIGURE
          timeout: "{{ drop_caches_timeout }}"
          critical: false # TODO: if this is set true, some basic task finished events aren't parsed correctly
      - name: fairmq-shmcleanup
        enabled: "{{fmq_initial_shm_cleanup_enabled == 'true'}}"
        vars:
          shell_command: "source /etc/profile.d/o2.sh && O2_PARTITION={{environment_id}} O2_ROLE={{qc_remote_machine}} o2-aliecs-shmcleaner"
          user: root
        task:
          load: "shell-command"
          trigger: before_CONFIGURE
          timeout: "{{ fmq_initial_shm_cleanup_timeout }}"
          critical: false
      - name: fairmq-shmmonitor
        enabled: "{{fmq_cleanup_enabled == 'true'}}"
        task:
          load: "fairmq-shmmonitor"
          trigger: DESTROY
          timeout: 10s
          critical: false
